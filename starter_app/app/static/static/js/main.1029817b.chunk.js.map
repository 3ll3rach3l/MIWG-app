{"version":3,"sources":["store/history.js","store/actions/auth.js","pages/LoginPage.js","pages/SignupPage.js","components/LogoutButton.js","pages/TempHome.js","store/actions/map.js","components/Search.js","pages/MapPage.js","pages/mapStyles.js","pages/Pages.js","App.js","store/reducers/rootReducer.js","store/configureStore.js","store/reducers/authReducer.js","store/reducers/mapReducer.js","index.js"],"names":["history","SET_USER","setUser","user","type","LoginPage","useState","email","setEmail","password","setPassword","currentUserToken","useSelector","state","auth","id","dispatch","useDispatch","handleSubmit","e","preventDefault","a","fetch","method","headers","Cookies","get","body","JSON","stringify","res","json","data","ok","login","to","className","onSubmit","placeholder","onChange","target","value","onClick","SignupPage","username","setUsername","signup","LogoutButton","props","handleClick","remove","TempHome","fetchCities","cities","Search","panTo","usePlacesAutocomplete","requestOptions","location","lat","lng","radius","ready","suggestions","status","setValue","clearSuggestions","onSelect","address","getGeocode","results","console","log","getLatLng","error","disabled","map","description","key","libraries","mapContainerStyle","width","height","center","options","styles","stylers","visibility","saturation","gamma","featureType","elementType","color","disableDefaultUI","MapPage","useLoadScript","googleMapsApiKey","process","isLoaded","loadError","useEffect","whatever","setMarkers","getCities","onMapClick","React","useCallback","current","latLng","time","Date","mapReducer","markers","selected","setSelected","mapRef","useRef","onMapLoad","setZoom","style","zoom","onLoad","city","position","icon","url","scaledSize","window","google","maps","Size","origin","Point","anchor","onCloseClick","Pages","path","component","App","loading","setLoading","loadUser","storeEnhancer","rootReducer","combineReducers","action","applyMiddleware","thunk","initialState","store","createStore","Node_ENV","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1029817b.chunk.js","sourcesContent":["import { createBrowserHistory as history } from 'history';\n\nexport default history();","import Cookies from 'js-cookie';\n\nexport const SET_USER = 'auth/SET_USER';\nexport const LOGOUT_USER = 'auth/LOGOUT_USER';\n\n//////////////////ACTIONS////////////////////\n\nexport const setUser = (user) => {\n    if (!user){\n        return{\n            type: SET_USER,\n            user: {}\n        }\n    }\n    return{\n        type: SET_USER,\n        user\n    }\n}\n\nexport const logoutUser = () =>{\n    return{\n        type: LOGOUT_USER\n    }\n}\n\n/////////////////////THUNKS////////////////////////\n\nexport const login = (email, password) => {\n    return async dispatch => {\n        const res = await fetch('/api/session', {\n            method: 'post',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"XSRF-TOKEN\": Cookies.get(\"XSRF-TOKEN\")\n            },\n            body: JSON.stringify({ email, password })\n        })\n        res.data = await res.json();\n        if (res.ok) {\n            dispatch(setUser(res.data.user))\n        }\n        return res;\n    }\n}\n\nexport const signup = (username, email, password) => {\n    return async dispatch => {\n        const res = await fetch('/api/users/signup', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                \"XSRF-TOKEN\": Cookies.get(\"XSRF-TOKEN\"),\n            },\n            body: JSON.stringify({ username, email, password })\n        })\n        res.data = await res.json();\n        if (res.ok) {\n            dispatch(setUser(res.data.user));\n        }\n        return res;\n    }\n}\n\nexport const logout = () => {\n    return async dispatch => {\n        const res = await fetch('/api/session', {\n            method: 'delete',\n            // headers: {\"XSRF-TOKEN\": Cookies.get(\"XSRF-TOKEN\")},\n            headers: { },\n        })\n        if (res.ok) {\n            dispatch(logoutUser());\n        }\n        return res;\n    }\n}\n\nexport const loginDemo = () => async (dispatch) => {\n    const res = await fetch(\"/api/session\", {\n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"XSRF-TOKEN\": Cookies.get(\"XSRF-TOKEN\")\n        },\n        body: JSON.stringify({ email: \"lauren@example.com\", password: \"password\" })\n    });\n   \n    res.data = await res.json();\n   \n    if (res.ok) {\n        dispatch(setUser(res.data.user))\n    }\n    return res;\n};","import React, { useState } from 'react';\nimport { login, loginDemo } from '../store/actions/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, Link } from \"react-router-dom\";\nimport './auth.css'\n\n\n\nfunction LoginPage() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const currentUserToken = useSelector(state => state.auth.id);\n    const dispatch = useDispatch();\n    \n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(login(email, password));\n       \n    }\n\n    const handleDemoSubmit = e => {\n        e.preventDefault();\n        dispatch(loginDemo());\n    }\n\n    if (currentUserToken) return <Redirect to=\"/\"/>;\n\n    return (\n        <div className=\"auth-container\">\n            <form className=\"auth-form\" onSubmit={handleSubmit}>\n            <div className=\"errors-container\">\n                <ul className=\"errors\" id=\"login-errors\"></ul>\n            </div>\n                <div className=\"signUpLabel\">\n                    <input type=\"text\" className=\"signup\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)}/>\n                </div>\n                <div className=\"signUpLabel\">\n                    <input type=\"password\" className=\"signup\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n                </div>\n                <div className=\"buttonDiv\">\n                <button className=\"authButton\" type=\"submit\" onClick={handleSubmit}>Log in</button>\n                </div>\n                <div className=\"buttonDiv\">\n                <button className=\"authButton\" type=\"submit\" onClick={handleDemoSubmit}>\n                    Log in as demo user\n                 </button>\n                </div>\n                <div className=\"signUpOption\">\n                    <span>\n                        Not a member? <Link to=\"/signup\">Sign up</Link>\n                    </span>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default LoginPage;","import React, { useState } from \"react\";\nimport { signup } from \"../store/actions/auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport './auth.css'\n\nfunction SignupPage() {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const currentUserId = useSelector((state) => state.auth.id);\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(signup(username, email, password));\n  };\n\n  if (currentUserId) return <Redirect to=\"/\" />;\n\n  return (\n    <> \n    <div className=\"auth-container\">\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\n          <div className=\"errors-container\">\n            <ul className=\"errors\" id=\"sign-up-errors\"></ul>\n          </div>\n          <div className=\"buttonDiv\">\n            <div className=\"signUpLabel\">\n                <input type=\"text\"\n                className=\"signup\"\n                placeholder=\"Username\"\n                onChange={(e) => setUsername(e.target.value)}\n                />\n            </div>\n          </div>\n          <div className=\"buttonDiv\">\n            <div className=\"signUpLabel\">\n                <input type=\"text\"\n                className=\"signup\"\n                placeholder=\"Email\"\n                id=\"outlined-basic\"\n                onChange={(e) => setEmail(e.target.value)}\n                />\n            </div>\n          </div>\n          <div className=\"buttonDiv\">\n            <div className=\"signUpLabel\">\n                <input type=\"password\"\n                className=\"signup\"\n                placeholder=\"Password\"\n                id=\"outlined-basic\"\n                onChange={(e) => setPassword(e.target.value)}\n                />\n            </div>\n          </div>\n          <div className=\"buttonDiv\">\n            <button\n              className=\"authButton\"\n              type=\"submit\"\n              onClick={handleSubmit}\n            >Sign Up</button>\n            <div className=\"signUpOption\">\n                <span>\n                    Already a member? <Link to=\"/login\">Log In</Link>\n                </span>\n            </div>\n          </div>\n        </form>   \n    </div>\n    </>\n  );\n}\n\nexport default SignupPage;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from '../store/actions/auth'\nimport Cookies from \"js-cookie\";\n\nfunction LogoutButton(props) {\n  const dispatch = useDispatch();\n  \n\n  const handleClick = async (e) => {\n    const res = await dispatch(logout());\n    //debugger\n    if (res.ok) Cookies.remove(\"token\");\n\n    //console.log(\"this is res in logoutbutton.js\", res)\n  };\n\n  return (\n    <div id=\"logout-button\">\n      <button\n        onClick={handleClick}\n        className=\"logout-button\"\n        type=\"click\"\n      > Log out </button>\n    </div>\n  );\n}\n\nexport default LogoutButton;\n\n","import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport {useSelector} from 'react-redux';\n\nimport LogoutButton from '../components/LogoutButton'\n\nfunction TempHome(){\n    const isLoggedIn = useSelector (state => !!state.auth.id);\n    \n    if(!isLoggedIn) return <Redirect to='/login'></Redirect>\n\n    return(\n        <>\n        <h1>My Home Page</h1>\n        <LogoutButton/>\n        </>\n\n    )\n\n}\n\nexport default TempHome;","import Cookies from \"js-cookie\";\n\nexport const GET_CITIES = \"GET_CITIES\";\nexport const GET_CITY = \"GET_CITY\";\nexport const POST_CITY = \"POST_CITY\"\n\n//////////////ACTIONS/////////////////////\nexport const getCities = (cities) =>{\n    return{\n        type: GET_CITIES,\n        cities\n    }\n}\n\nexport const getCity = (city) => {\n    return{\n        type: GET_CITY,\n        city\n    }\n}\n\nexport const postCity = (city) =>{\n    return{\n        type: POST_CITY,\n        city\n    }\n}\n\n////////////////////THUNKS/////////////////////////\nexport const fetchCities = () =>{\n    return async (dispatch) => {\n        const res = await fetch(`/api/map`);\n        const data = await res.json()\n\n        dispatch(getCities(data.cities))\n        return data\n    }\n\n}\n\nexport const fetchCity = (id)  =>{\n    return async (dispatch) =>{\n        const res = await fetch (`/api/map/${id}`);\n        const data = await res.json();\n        dispatch(getCity(data.city))\n\n        return data\n\n    }\n}\n\nexport const newCity = (city, state, lat, lng) =>{\n    return async (dispatch) =>{\n        const res = await fetch(\"/api/map/missing\", {\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"XSRF-TOKEN\": Cookies.get(\"XSRF-TOKEN\"),\n          },\n          body: JSON.stringify({ city, state, lat, lng }),\n        });\n\n       res.data = await res.json();\n\n       if(res.ok){\n           dispatch(postCity(res.data))\n       }\n       return res;\n    }\n}","import React from 'react';\n\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\n\nimport {Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption} from '@reach/combobox';\nimport '@reach/combobox/styles.css'\nimport './search.css'\n\nexport default function Search({panTo}){\n    //hook\n    const {\n        ready, \n        value, \n        suggestions: {status, data}, \n        setValue, \n        clearSuggestions\n    } = usePlacesAutocomplete({\n        requestOptions: {\n            location: {lat: () => 39.099728, lng: () => -94.578568}, //will prefer places near the location\n            radius:  100 * 1000, //how far around the center to we want (this is in meters now)\n        }\n    })\n\n\n    return (\n      <div className=\"search\">\n        <Combobox\n          onSelect={async (address) => {\n              setValue(address, false); //updates states\n              clearSuggestions()\n           try{\n               const results = await getGeocode({address});\n               console.log(results[0])\n               const {lat, lng} = await getLatLng(results[0]); // this converts results from string to lat, lng\n                console.log(\"this is lat long\", lat, lng)\n               panTo({lat, lng}); //error: panTo is not a function NEED TO FIX\n\n           } catch(error){\n               console.error(\"error!\")\n               console.log(error)\n           }\n          }}\n        >\n          <ComboboxInput\n            value={value}\n            onChange={(e) => {\n              setValue(e.target.value);\n            }}\n            disabled={!ready}\n            placeholder=\"Enter a city\"\n          />\n          <ComboboxPopover>\n              {status === 'OK' && \n                data.map(({id, description}) => (\n                <ComboboxOption key={id} value={description}/>\n                ))}\n          </ComboboxPopover>\n        </Combobox>\n      </div>\n    );\n}\n\n","import React, {useEffect} from 'react'\nimport {GoogleMap, useLoadScript, Marker, InfoWindow} from '@react-google-maps/api';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {fetchCities, postCity} from '../store/actions/map';\nimport {useQuery, useMutation, queryCache} from 'react-query'\n\nimport mapStyles from './mapStyles'\nimport Search from '../components/Search'\n// import Markers from '../components/Markers';\nimport './mapPage.css'\n\n\n\n//can go in it's own component\nconst libraries = ['places'];\n\nconst mapContainerStyle = {\n  width: '100vs',\n  height: '100vh'\n}\n\nconst center = {\n  lat: 39.099728,\n  lng: -94.578568,\n};\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n}\n\n\n\nexport default function MapPage(){\n  const dispatch = useDispatch()\n\n  //hooks\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n    libraries,\n  });\n\n  useEffect(()=>{\n    async function getCities(){\n     const whatever = await dispatch(fetchCities())\n     console.log(whatever)\n     setMarkers(whatever.cities)\n    }\n    getCities()\n  }, [dispatch]);\n\n\n  //this event is listening for every click on map and registering the lat & long in state\n  const onMapClick = React.useCallback((e) => {\n   // dispatch(postCity(city, state, lat, lng))\n    setMarkers((current) => [\n      ...current,\n      {\n        lat: e.latLng.lat(),\n        lng: e.latLng.lng(),\n        time: new Date(),\n      },\n    ]);\n  }, []);\n\n  //state - useState is used when we want React to re-render\n  const cities = useSelector(state => state.mapReducer)\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState(null)\n\n  \n\n  const mapRef = React.useRef(); //we use ref when we want to retain state without re-rendering\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const panTo = React.useCallback(({lat, lng}) => { //this is for panning to the city input from search\n    mapRef.current.panTo({lat, lng});\n    mapRef.current.setZoom(14);\n  }, []);\n\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Maps\";\n  if(!cities) return \"loading cities\"\n  console.log(cities)\n  return (\n    <div className=\"googleMap\" style={{ width: \"100vw\", height: \"100vh\" }}>\n      <h1>No more stolen sisters</h1>\n\n      <Search panTo={panTo}/>\n\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        zoom={4.5}\n        center={center}\n        options={options}\n        onClick={onMapClick}\n        onLoad={onMapLoad}\n      >\n       \n        {/* below is the 'func' to add markers to map when a user clicks */}\n        {markers.map((city) => (\n          <Marker\n            key={city.city}\n            position={{ lat: city.lat, lng: city.lng }}\n            icon={{\n              url: \"/red-hand.svg\",\n              scaledSize: new window.google.maps.Size(50, 50),\n              origin: new window.google.maps.Point(0, 0),\n              anchor: new window.google.maps.Point(25, 25),\n            }}\n            onClick={() => {\n              setSelected(city); // this click handler \"selects\" a city that is already on the map aka you will be able to 'select' it to get info\n            }}\n          />\n        ))}\n\n        {selected ? (\n          <InfoWindow \n          position={{ lat: selected.lat, lng: selected.lng }}\n          onCloseClick={()=>{setSelected(null)}}\n          >\n            <div>\n              <h2>This is Dope</h2>\n              <p>\n                Deciding how I want to utilize this...\n              </p>\n            </div>\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n    </div>\n  );\n}\n\n","export default [\n  {\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        saturation: -100,\n      },\n      {\n        gamma: 0.54,\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    stylers: [\n      {\n        color: \"#4d4946\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels.text\",\n    stylers: [\n      {\n        visibility: \"simplified\",\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"labels.text\",\n    stylers: [\n      {\n        visibility: \"simplified\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit.line\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        gamma: 0.48,\n      },\n    ],\n  },\n  {\n    featureType: \"transit.station\",\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"geometry.stroke\",\n    stylers: [\n      {\n        gamma: 7.18,\n      },\n    ],\n  },\n];\n","import React from 'react';\nimport {Route, Switch, Router} from 'react-router-dom';\nimport history from '../store/history'\n\nimport LoginPage from './LoginPage'\nimport SignupPage from './SignupPage'\nimport TempHome from './TempHome'\nimport MapPage from './MapPage'\n\n\nexport default function Pages() {\n    return (\n      <Router history={history}>\n        <Switch>\n          <Route path=\"/map\" component={MapPage} />\n          <Route path=\"/signup\" component={SignupPage} />\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/\" component={TempHome}/>\n        </Switch>\n      </Router>\n    );\n}","import React, {useEffect, useState } from 'react';\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\nimport Pages from './pages/Pages'\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"./store/actions/auth\";\n\nimport UserList from './components/UsersList';\n\n\nfunction App() {\n    const [loading, setLoading] = useState(true);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      const loadUser = async () => {\n        //backend route to get current user\n        const res = await fetch(\"/api/session/current\");\n        if (res.ok) {\n          res.data = await res.json();\n          dispatch(setUser(res.data));\n        }\n        setLoading(false);\n      };\n      loadUser();\n    }, [dispatch]);\n\n    if (loading) return null;\n  console.log(\"____Rendering app_____\")\n  return (\n    <BrowserRouter>\n        <Pages />\n        {/* <nav>\n            <ul>\n                <li><NavLink to=\"/\" activeclass=\"active\">Home</NavLink></li>\n                <li><NavLink to=\"/users\" activeclass=\"active\">Users</NavLink></li>\n            </ul>\n        </nav>\n        <Switch>\n            <Route path=\"/users\">\n                <UserList />\n            </Route>\n\n            <Route path=\"/\">\n                <h1>My Home Page</h1>\n            </Route>\n        </Switch> */}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport mapReducer from './mapReducer';\n\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    mapReducer,\n   \n})\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\n\nlet storeEnhancer;\n\nif (process.env.NODE_ENV !== 'production') {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    storeEnhancer = composeEnhancers(applyMiddleware(thunk));\n} else {\n    storeEnhancer = applyMiddleware(thunk);\n}\n\nexport default function configureStore(initialState) {\n    return createStore(\n        rootReducer,\n        initialState,\n        storeEnhancer\n    )\n}","import { SET_USER, LOGOUT_USER } from '../actions/auth';\n\nexport default function authReducer(state = {}, action) {\n    switch (action.type) {\n        case SET_USER:\n            return action.user;\n\n        case LOGOUT_USER:\n            return {};\n\n        default:\n            return state;\n    }\n\n}","import {GET_CITIES, GET_CITY, POST_CITY} from '../actions/map';\n\nexport default function mapReducer(state ={}, action){\n    switch(action.type){\n        case GET_CITIES:\n            return action.cities;\n        case GET_CITY:\n            return action.city;\n        case POST_CITY:\n            return action.city\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store/configureStore';\nimport {Provider} from 'react-redux';\n\nconst store = configureStore();\nif (process.env.Node_ENV !== 'production') {\n  window.store = store;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}